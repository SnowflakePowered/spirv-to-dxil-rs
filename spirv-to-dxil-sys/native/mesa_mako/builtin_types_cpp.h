/*
 * Copyright 2023 Intel Corporation
 * SPDX-License-Identifier: MIT
 */

/* This is an automatically generated file. */

#ifdef BUILTIN_TYPES_CPP_DECLARATIONS
static const glsl_type *const error_type;
static const glsl_type *const void_type;
static const glsl_type *const bool_type;
static const glsl_type *const bvec2_type;
static const glsl_type *const bvec3_type;
static const glsl_type *const bvec4_type;
static const glsl_type *const bvec5_type;
static const glsl_type *const bvec8_type;
static const glsl_type *const bvec16_type;
static const glsl_type *const int_type;
static const glsl_type *const ivec2_type;
static const glsl_type *const ivec3_type;
static const glsl_type *const ivec4_type;
static const glsl_type *const ivec5_type;
static const glsl_type *const ivec8_type;
static const glsl_type *const ivec16_type;
static const glsl_type *const uint_type;
static const glsl_type *const uvec2_type;
static const glsl_type *const uvec3_type;
static const glsl_type *const uvec4_type;
static const glsl_type *const uvec5_type;
static const glsl_type *const uvec8_type;
static const glsl_type *const uvec16_type;
static const glsl_type *const float_type;
static const glsl_type *const vec2_type;
static const glsl_type *const vec3_type;
static const glsl_type *const vec4_type;
static const glsl_type *const vec5_type;
static const glsl_type *const vec8_type;
static const glsl_type *const vec16_type;
static const glsl_type *const float16_t_type;
static const glsl_type *const f16vec2_type;
static const glsl_type *const f16vec3_type;
static const glsl_type *const f16vec4_type;
static const glsl_type *const f16vec5_type;
static const glsl_type *const f16vec8_type;
static const glsl_type *const f16vec16_type;
static const glsl_type *const double_type;
static const glsl_type *const dvec2_type;
static const glsl_type *const dvec3_type;
static const glsl_type *const dvec4_type;
static const glsl_type *const dvec5_type;
static const glsl_type *const dvec8_type;
static const glsl_type *const dvec16_type;
static const glsl_type *const int64_t_type;
static const glsl_type *const i64vec2_type;
static const glsl_type *const i64vec3_type;
static const glsl_type *const i64vec4_type;
static const glsl_type *const i64vec5_type;
static const glsl_type *const i64vec8_type;
static const glsl_type *const i64vec16_type;
static const glsl_type *const uint64_t_type;
static const glsl_type *const u64vec2_type;
static const glsl_type *const u64vec3_type;
static const glsl_type *const u64vec4_type;
static const glsl_type *const u64vec5_type;
static const glsl_type *const u64vec8_type;
static const glsl_type *const u64vec16_type;
static const glsl_type *const int16_t_type;
static const glsl_type *const i16vec2_type;
static const glsl_type *const i16vec3_type;
static const glsl_type *const i16vec4_type;
static const glsl_type *const i16vec5_type;
static const glsl_type *const i16vec8_type;
static const glsl_type *const i16vec16_type;
static const glsl_type *const uint16_t_type;
static const glsl_type *const u16vec2_type;
static const glsl_type *const u16vec3_type;
static const glsl_type *const u16vec4_type;
static const glsl_type *const u16vec5_type;
static const glsl_type *const u16vec8_type;
static const glsl_type *const u16vec16_type;
static const glsl_type *const int8_t_type;
static const glsl_type *const i8vec2_type;
static const glsl_type *const i8vec3_type;
static const glsl_type *const i8vec4_type;
static const glsl_type *const i8vec5_type;
static const glsl_type *const i8vec8_type;
static const glsl_type *const i8vec16_type;
static const glsl_type *const uint8_t_type;
static const glsl_type *const u8vec2_type;
static const glsl_type *const u8vec3_type;
static const glsl_type *const u8vec4_type;
static const glsl_type *const u8vec5_type;
static const glsl_type *const u8vec8_type;
static const glsl_type *const u8vec16_type;
static const glsl_type *const mat2_type;
static const glsl_type *const mat3_type;
static const glsl_type *const mat4_type;
static const glsl_type *const mat2x3_type;
static const glsl_type *const mat2x4_type;
static const glsl_type *const mat3x2_type;
static const glsl_type *const mat3x4_type;
static const glsl_type *const mat4x2_type;
static const glsl_type *const mat4x3_type;
static const glsl_type *const f16mat2_type;
static const glsl_type *const f16mat3_type;
static const glsl_type *const f16mat4_type;
static const glsl_type *const f16mat2x3_type;
static const glsl_type *const f16mat2x4_type;
static const glsl_type *const f16mat3x2_type;
static const glsl_type *const f16mat3x4_type;
static const glsl_type *const f16mat4x2_type;
static const glsl_type *const f16mat4x3_type;
static const glsl_type *const dmat2_type;
static const glsl_type *const dmat3_type;
static const glsl_type *const dmat4_type;
static const glsl_type *const dmat2x3_type;
static const glsl_type *const dmat2x4_type;
static const glsl_type *const dmat3x2_type;
static const glsl_type *const dmat3x4_type;
static const glsl_type *const dmat4x2_type;
static const glsl_type *const dmat4x3_type;
static const glsl_type *const atomic_uint_type;
static const glsl_type *const sampler_type;
static const glsl_type *const sampler1D_type;
static const glsl_type *const sampler2D_type;
static const glsl_type *const sampler3D_type;
static const glsl_type *const samplerCube_type;
static const glsl_type *const sampler1DArray_type;
static const glsl_type *const sampler2DArray_type;
static const glsl_type *const samplerCubeArray_type;
static const glsl_type *const sampler2DRect_type;
static const glsl_type *const samplerBuffer_type;
static const glsl_type *const sampler2DMS_type;
static const glsl_type *const sampler2DMSArray_type;
static const glsl_type *const isampler1D_type;
static const glsl_type *const isampler2D_type;
static const glsl_type *const isampler3D_type;
static const glsl_type *const isamplerCube_type;
static const glsl_type *const isampler1DArray_type;
static const glsl_type *const isampler2DArray_type;
static const glsl_type *const isamplerCubeArray_type;
static const glsl_type *const isampler2DRect_type;
static const glsl_type *const isamplerBuffer_type;
static const glsl_type *const isampler2DMS_type;
static const glsl_type *const isampler2DMSArray_type;
static const glsl_type *const usampler1D_type;
static const glsl_type *const usampler2D_type;
static const glsl_type *const usampler3D_type;
static const glsl_type *const usamplerCube_type;
static const glsl_type *const usampler1DArray_type;
static const glsl_type *const usampler2DArray_type;
static const glsl_type *const usamplerCubeArray_type;
static const glsl_type *const usampler2DRect_type;
static const glsl_type *const usamplerBuffer_type;
static const glsl_type *const usampler2DMS_type;
static const glsl_type *const usampler2DMSArray_type;
static const glsl_type *const samplerShadow_type;
static const glsl_type *const sampler1DShadow_type;
static const glsl_type *const sampler2DShadow_type;
static const glsl_type *const samplerCubeShadow_type;
static const glsl_type *const sampler1DArrayShadow_type;
static const glsl_type *const sampler2DArrayShadow_type;
static const glsl_type *const samplerCubeArrayShadow_type;
static const glsl_type *const sampler2DRectShadow_type;
static const glsl_type *const samplerExternalOES_type;
static const glsl_type *const texture1D_type;
static const glsl_type *const texture2D_type;
static const glsl_type *const texture3D_type;
static const glsl_type *const textureCube_type;
static const glsl_type *const texture1DArray_type;
static const glsl_type *const texture2DArray_type;
static const glsl_type *const textureCubeArray_type;
static const glsl_type *const texture2DRect_type;
static const glsl_type *const textureBuffer_type;
static const glsl_type *const texture2DMS_type;
static const glsl_type *const texture2DMSArray_type;
static const glsl_type *const itexture1D_type;
static const glsl_type *const itexture2D_type;
static const glsl_type *const itexture3D_type;
static const glsl_type *const itextureCube_type;
static const glsl_type *const itexture1DArray_type;
static const glsl_type *const itexture2DArray_type;
static const glsl_type *const itextureCubeArray_type;
static const glsl_type *const itexture2DRect_type;
static const glsl_type *const itextureBuffer_type;
static const glsl_type *const itexture2DMS_type;
static const glsl_type *const itexture2DMSArray_type;
static const glsl_type *const utexture1D_type;
static const glsl_type *const utexture2D_type;
static const glsl_type *const utexture3D_type;
static const glsl_type *const utextureCube_type;
static const glsl_type *const utexture1DArray_type;
static const glsl_type *const utexture2DArray_type;
static const glsl_type *const utextureCubeArray_type;
static const glsl_type *const utexture2DRect_type;
static const glsl_type *const utextureBuffer_type;
static const glsl_type *const utexture2DMS_type;
static const glsl_type *const utexture2DMSArray_type;
static const glsl_type *const textureExternalOES_type;
static const glsl_type *const vtexture1D_type;
static const glsl_type *const vtexture2D_type;
static const glsl_type *const vtexture3D_type;
static const glsl_type *const vtexture1DArray_type;
static const glsl_type *const vtexture2DArray_type;
static const glsl_type *const vtextureBuffer_type;
static const glsl_type *const image1D_type;
static const glsl_type *const image2D_type;
static const glsl_type *const image3D_type;
static const glsl_type *const image2DRect_type;
static const glsl_type *const imageCube_type;
static const glsl_type *const imageBuffer_type;
static const glsl_type *const image1DArray_type;
static const glsl_type *const image2DArray_type;
static const glsl_type *const imageCubeArray_type;
static const glsl_type *const image2DMS_type;
static const glsl_type *const image2DMSArray_type;
static const glsl_type *const iimage1D_type;
static const glsl_type *const iimage2D_type;
static const glsl_type *const iimage3D_type;
static const glsl_type *const iimage2DRect_type;
static const glsl_type *const iimageCube_type;
static const glsl_type *const iimageBuffer_type;
static const glsl_type *const iimage1DArray_type;
static const glsl_type *const iimage2DArray_type;
static const glsl_type *const iimageCubeArray_type;
static const glsl_type *const iimage2DMS_type;
static const glsl_type *const iimage2DMSArray_type;
static const glsl_type *const uimage1D_type;
static const glsl_type *const uimage2D_type;
static const glsl_type *const uimage3D_type;
static const glsl_type *const uimage2DRect_type;
static const glsl_type *const uimageCube_type;
static const glsl_type *const uimageBuffer_type;
static const glsl_type *const uimage1DArray_type;
static const glsl_type *const uimage2DArray_type;
static const glsl_type *const uimageCubeArray_type;
static const glsl_type *const uimage2DMS_type;
static const glsl_type *const uimage2DMSArray_type;
static const glsl_type *const i64image1D_type;
static const glsl_type *const i64image2D_type;
static const glsl_type *const i64image3D_type;
static const glsl_type *const i64image2DRect_type;
static const glsl_type *const i64imageCube_type;
static const glsl_type *const i64imageBuffer_type;
static const glsl_type *const i64image1DArray_type;
static const glsl_type *const i64image2DArray_type;
static const glsl_type *const i64imageCubeArray_type;
static const glsl_type *const i64image2DMS_type;
static const glsl_type *const i64image2DMSArray_type;
static const glsl_type *const u64image1D_type;
static const glsl_type *const u64image2D_type;
static const glsl_type *const u64image3D_type;
static const glsl_type *const u64image2DRect_type;
static const glsl_type *const u64imageCube_type;
static const glsl_type *const u64imageBuffer_type;
static const glsl_type *const u64image1DArray_type;
static const glsl_type *const u64image2DArray_type;
static const glsl_type *const u64imageCubeArray_type;
static const glsl_type *const u64image2DMS_type;
static const glsl_type *const u64image2DMSArray_type;
static const glsl_type *const vbuffer_type;
static const glsl_type *const vimage1D_type;
static const glsl_type *const vimage2D_type;
static const glsl_type *const vimage3D_type;
static const glsl_type *const vimage1DArray_type;
static const glsl_type *const vimage2DArray_type;
static const glsl_type *const subpassInput_type;
static const glsl_type *const subpassInputMS_type;
static const glsl_type *const isubpassInput_type;
static const glsl_type *const isubpassInputMS_type;
static const glsl_type *const usubpassInput_type;
static const glsl_type *const usubpassInputMS_type;
static const glsl_type *const textureSubpassInput_type;
static const glsl_type *const textureSubpassInputMS_type;
static const glsl_type *const itextureSubpassInput_type;
static const glsl_type *const itextureSubpassInputMS_type;
static const glsl_type *const utextureSubpassInput_type;
static const glsl_type *const utextureSubpassInputMS_type;
#endif

#ifdef BUILTIN_TYPES_CPP_DEFINITIONS
inline const glsl_type *const glsl_type::error_type = &glsl_type_builtin_error;
inline const glsl_type *const glsl_type::void_type = &glsl_type_builtin_void;
inline const glsl_type *const glsl_type::bool_type = &glsl_type_builtin_bool;
inline const glsl_type *const glsl_type::bvec2_type = &glsl_type_builtin_bvec2;
inline const glsl_type *const glsl_type::bvec3_type = &glsl_type_builtin_bvec3;
inline const glsl_type *const glsl_type::bvec4_type = &glsl_type_builtin_bvec4;
inline const glsl_type *const glsl_type::bvec5_type = &glsl_type_builtin_bvec5;
inline const glsl_type *const glsl_type::bvec8_type = &glsl_type_builtin_bvec8;
inline const glsl_type *const glsl_type::bvec16_type = &glsl_type_builtin_bvec16;
inline const glsl_type *const glsl_type::int_type = &glsl_type_builtin_int;
inline const glsl_type *const glsl_type::ivec2_type = &glsl_type_builtin_ivec2;
inline const glsl_type *const glsl_type::ivec3_type = &glsl_type_builtin_ivec3;
inline const glsl_type *const glsl_type::ivec4_type = &glsl_type_builtin_ivec4;
inline const glsl_type *const glsl_type::ivec5_type = &glsl_type_builtin_ivec5;
inline const glsl_type *const glsl_type::ivec8_type = &glsl_type_builtin_ivec8;
inline const glsl_type *const glsl_type::ivec16_type = &glsl_type_builtin_ivec16;
inline const glsl_type *const glsl_type::uint_type = &glsl_type_builtin_uint;
inline const glsl_type *const glsl_type::uvec2_type = &glsl_type_builtin_uvec2;
inline const glsl_type *const glsl_type::uvec3_type = &glsl_type_builtin_uvec3;
inline const glsl_type *const glsl_type::uvec4_type = &glsl_type_builtin_uvec4;
inline const glsl_type *const glsl_type::uvec5_type = &glsl_type_builtin_uvec5;
inline const glsl_type *const glsl_type::uvec8_type = &glsl_type_builtin_uvec8;
inline const glsl_type *const glsl_type::uvec16_type = &glsl_type_builtin_uvec16;
inline const glsl_type *const glsl_type::float_type = &glsl_type_builtin_float;
inline const glsl_type *const glsl_type::vec2_type = &glsl_type_builtin_vec2;
inline const glsl_type *const glsl_type::vec3_type = &glsl_type_builtin_vec3;
inline const glsl_type *const glsl_type::vec4_type = &glsl_type_builtin_vec4;
inline const glsl_type *const glsl_type::vec5_type = &glsl_type_builtin_vec5;
inline const glsl_type *const glsl_type::vec8_type = &glsl_type_builtin_vec8;
inline const glsl_type *const glsl_type::vec16_type = &glsl_type_builtin_vec16;
inline const glsl_type *const glsl_type::float16_t_type = &glsl_type_builtin_float16_t;
inline const glsl_type *const glsl_type::f16vec2_type = &glsl_type_builtin_f16vec2;
inline const glsl_type *const glsl_type::f16vec3_type = &glsl_type_builtin_f16vec3;
inline const glsl_type *const glsl_type::f16vec4_type = &glsl_type_builtin_f16vec4;
inline const glsl_type *const glsl_type::f16vec5_type = &glsl_type_builtin_f16vec5;
inline const glsl_type *const glsl_type::f16vec8_type = &glsl_type_builtin_f16vec8;
inline const glsl_type *const glsl_type::f16vec16_type = &glsl_type_builtin_f16vec16;
inline const glsl_type *const glsl_type::double_type = &glsl_type_builtin_double;
inline const glsl_type *const glsl_type::dvec2_type = &glsl_type_builtin_dvec2;
inline const glsl_type *const glsl_type::dvec3_type = &glsl_type_builtin_dvec3;
inline const glsl_type *const glsl_type::dvec4_type = &glsl_type_builtin_dvec4;
inline const glsl_type *const glsl_type::dvec5_type = &glsl_type_builtin_dvec5;
inline const glsl_type *const glsl_type::dvec8_type = &glsl_type_builtin_dvec8;
inline const glsl_type *const glsl_type::dvec16_type = &glsl_type_builtin_dvec16;
inline const glsl_type *const glsl_type::int64_t_type = &glsl_type_builtin_int64_t;
inline const glsl_type *const glsl_type::i64vec2_type = &glsl_type_builtin_i64vec2;
inline const glsl_type *const glsl_type::i64vec3_type = &glsl_type_builtin_i64vec3;
inline const glsl_type *const glsl_type::i64vec4_type = &glsl_type_builtin_i64vec4;
inline const glsl_type *const glsl_type::i64vec5_type = &glsl_type_builtin_i64vec5;
inline const glsl_type *const glsl_type::i64vec8_type = &glsl_type_builtin_i64vec8;
inline const glsl_type *const glsl_type::i64vec16_type = &glsl_type_builtin_i64vec16;
inline const glsl_type *const glsl_type::uint64_t_type = &glsl_type_builtin_uint64_t;
inline const glsl_type *const glsl_type::u64vec2_type = &glsl_type_builtin_u64vec2;
inline const glsl_type *const glsl_type::u64vec3_type = &glsl_type_builtin_u64vec3;
inline const glsl_type *const glsl_type::u64vec4_type = &glsl_type_builtin_u64vec4;
inline const glsl_type *const glsl_type::u64vec5_type = &glsl_type_builtin_u64vec5;
inline const glsl_type *const glsl_type::u64vec8_type = &glsl_type_builtin_u64vec8;
inline const glsl_type *const glsl_type::u64vec16_type = &glsl_type_builtin_u64vec16;
inline const glsl_type *const glsl_type::int16_t_type = &glsl_type_builtin_int16_t;
inline const glsl_type *const glsl_type::i16vec2_type = &glsl_type_builtin_i16vec2;
inline const glsl_type *const glsl_type::i16vec3_type = &glsl_type_builtin_i16vec3;
inline const glsl_type *const glsl_type::i16vec4_type = &glsl_type_builtin_i16vec4;
inline const glsl_type *const glsl_type::i16vec5_type = &glsl_type_builtin_i16vec5;
inline const glsl_type *const glsl_type::i16vec8_type = &glsl_type_builtin_i16vec8;
inline const glsl_type *const glsl_type::i16vec16_type = &glsl_type_builtin_i16vec16;
inline const glsl_type *const glsl_type::uint16_t_type = &glsl_type_builtin_uint16_t;
inline const glsl_type *const glsl_type::u16vec2_type = &glsl_type_builtin_u16vec2;
inline const glsl_type *const glsl_type::u16vec3_type = &glsl_type_builtin_u16vec3;
inline const glsl_type *const glsl_type::u16vec4_type = &glsl_type_builtin_u16vec4;
inline const glsl_type *const glsl_type::u16vec5_type = &glsl_type_builtin_u16vec5;
inline const glsl_type *const glsl_type::u16vec8_type = &glsl_type_builtin_u16vec8;
inline const glsl_type *const glsl_type::u16vec16_type = &glsl_type_builtin_u16vec16;
inline const glsl_type *const glsl_type::int8_t_type = &glsl_type_builtin_int8_t;
inline const glsl_type *const glsl_type::i8vec2_type = &glsl_type_builtin_i8vec2;
inline const glsl_type *const glsl_type::i8vec3_type = &glsl_type_builtin_i8vec3;
inline const glsl_type *const glsl_type::i8vec4_type = &glsl_type_builtin_i8vec4;
inline const glsl_type *const glsl_type::i8vec5_type = &glsl_type_builtin_i8vec5;
inline const glsl_type *const glsl_type::i8vec8_type = &glsl_type_builtin_i8vec8;
inline const glsl_type *const glsl_type::i8vec16_type = &glsl_type_builtin_i8vec16;
inline const glsl_type *const glsl_type::uint8_t_type = &glsl_type_builtin_uint8_t;
inline const glsl_type *const glsl_type::u8vec2_type = &glsl_type_builtin_u8vec2;
inline const glsl_type *const glsl_type::u8vec3_type = &glsl_type_builtin_u8vec3;
inline const glsl_type *const glsl_type::u8vec4_type = &glsl_type_builtin_u8vec4;
inline const glsl_type *const glsl_type::u8vec5_type = &glsl_type_builtin_u8vec5;
inline const glsl_type *const glsl_type::u8vec8_type = &glsl_type_builtin_u8vec8;
inline const glsl_type *const glsl_type::u8vec16_type = &glsl_type_builtin_u8vec16;
inline const glsl_type *const glsl_type::mat2_type = &glsl_type_builtin_mat2;
inline const glsl_type *const glsl_type::mat3_type = &glsl_type_builtin_mat3;
inline const glsl_type *const glsl_type::mat4_type = &glsl_type_builtin_mat4;
inline const glsl_type *const glsl_type::mat2x3_type = &glsl_type_builtin_mat2x3;
inline const glsl_type *const glsl_type::mat2x4_type = &glsl_type_builtin_mat2x4;
inline const glsl_type *const glsl_type::mat3x2_type = &glsl_type_builtin_mat3x2;
inline const glsl_type *const glsl_type::mat3x4_type = &glsl_type_builtin_mat3x4;
inline const glsl_type *const glsl_type::mat4x2_type = &glsl_type_builtin_mat4x2;
inline const glsl_type *const glsl_type::mat4x3_type = &glsl_type_builtin_mat4x3;
inline const glsl_type *const glsl_type::f16mat2_type = &glsl_type_builtin_f16mat2;
inline const glsl_type *const glsl_type::f16mat3_type = &glsl_type_builtin_f16mat3;
inline const glsl_type *const glsl_type::f16mat4_type = &glsl_type_builtin_f16mat4;
inline const glsl_type *const glsl_type::f16mat2x3_type = &glsl_type_builtin_f16mat2x3;
inline const glsl_type *const glsl_type::f16mat2x4_type = &glsl_type_builtin_f16mat2x4;
inline const glsl_type *const glsl_type::f16mat3x2_type = &glsl_type_builtin_f16mat3x2;
inline const glsl_type *const glsl_type::f16mat3x4_type = &glsl_type_builtin_f16mat3x4;
inline const glsl_type *const glsl_type::f16mat4x2_type = &glsl_type_builtin_f16mat4x2;
inline const glsl_type *const glsl_type::f16mat4x3_type = &glsl_type_builtin_f16mat4x3;
inline const glsl_type *const glsl_type::dmat2_type = &glsl_type_builtin_dmat2;
inline const glsl_type *const glsl_type::dmat3_type = &glsl_type_builtin_dmat3;
inline const glsl_type *const glsl_type::dmat4_type = &glsl_type_builtin_dmat4;
inline const glsl_type *const glsl_type::dmat2x3_type = &glsl_type_builtin_dmat2x3;
inline const glsl_type *const glsl_type::dmat2x4_type = &glsl_type_builtin_dmat2x4;
inline const glsl_type *const glsl_type::dmat3x2_type = &glsl_type_builtin_dmat3x2;
inline const glsl_type *const glsl_type::dmat3x4_type = &glsl_type_builtin_dmat3x4;
inline const glsl_type *const glsl_type::dmat4x2_type = &glsl_type_builtin_dmat4x2;
inline const glsl_type *const glsl_type::dmat4x3_type = &glsl_type_builtin_dmat4x3;
inline const glsl_type *const glsl_type::atomic_uint_type = &glsl_type_builtin_atomic_uint;
inline const glsl_type *const glsl_type::sampler_type = &glsl_type_builtin_sampler;
inline const glsl_type *const glsl_type::sampler1D_type = &glsl_type_builtin_sampler1D;
inline const glsl_type *const glsl_type::sampler2D_type = &glsl_type_builtin_sampler2D;
inline const glsl_type *const glsl_type::sampler3D_type = &glsl_type_builtin_sampler3D;
inline const glsl_type *const glsl_type::samplerCube_type = &glsl_type_builtin_samplerCube;
inline const glsl_type *const glsl_type::sampler1DArray_type = &glsl_type_builtin_sampler1DArray;
inline const glsl_type *const glsl_type::sampler2DArray_type = &glsl_type_builtin_sampler2DArray;
inline const glsl_type *const glsl_type::samplerCubeArray_type = &glsl_type_builtin_samplerCubeArray;
inline const glsl_type *const glsl_type::sampler2DRect_type = &glsl_type_builtin_sampler2DRect;
inline const glsl_type *const glsl_type::samplerBuffer_type = &glsl_type_builtin_samplerBuffer;
inline const glsl_type *const glsl_type::sampler2DMS_type = &glsl_type_builtin_sampler2DMS;
inline const glsl_type *const glsl_type::sampler2DMSArray_type = &glsl_type_builtin_sampler2DMSArray;
inline const glsl_type *const glsl_type::isampler1D_type = &glsl_type_builtin_isampler1D;
inline const glsl_type *const glsl_type::isampler2D_type = &glsl_type_builtin_isampler2D;
inline const glsl_type *const glsl_type::isampler3D_type = &glsl_type_builtin_isampler3D;
inline const glsl_type *const glsl_type::isamplerCube_type = &glsl_type_builtin_isamplerCube;
inline const glsl_type *const glsl_type::isampler1DArray_type = &glsl_type_builtin_isampler1DArray;
inline const glsl_type *const glsl_type::isampler2DArray_type = &glsl_type_builtin_isampler2DArray;
inline const glsl_type *const glsl_type::isamplerCubeArray_type = &glsl_type_builtin_isamplerCubeArray;
inline const glsl_type *const glsl_type::isampler2DRect_type = &glsl_type_builtin_isampler2DRect;
inline const glsl_type *const glsl_type::isamplerBuffer_type = &glsl_type_builtin_isamplerBuffer;
inline const glsl_type *const glsl_type::isampler2DMS_type = &glsl_type_builtin_isampler2DMS;
inline const glsl_type *const glsl_type::isampler2DMSArray_type = &glsl_type_builtin_isampler2DMSArray;
inline const glsl_type *const glsl_type::usampler1D_type = &glsl_type_builtin_usampler1D;
inline const glsl_type *const glsl_type::usampler2D_type = &glsl_type_builtin_usampler2D;
inline const glsl_type *const glsl_type::usampler3D_type = &glsl_type_builtin_usampler3D;
inline const glsl_type *const glsl_type::usamplerCube_type = &glsl_type_builtin_usamplerCube;
inline const glsl_type *const glsl_type::usampler1DArray_type = &glsl_type_builtin_usampler1DArray;
inline const glsl_type *const glsl_type::usampler2DArray_type = &glsl_type_builtin_usampler2DArray;
inline const glsl_type *const glsl_type::usamplerCubeArray_type = &glsl_type_builtin_usamplerCubeArray;
inline const glsl_type *const glsl_type::usampler2DRect_type = &glsl_type_builtin_usampler2DRect;
inline const glsl_type *const glsl_type::usamplerBuffer_type = &glsl_type_builtin_usamplerBuffer;
inline const glsl_type *const glsl_type::usampler2DMS_type = &glsl_type_builtin_usampler2DMS;
inline const glsl_type *const glsl_type::usampler2DMSArray_type = &glsl_type_builtin_usampler2DMSArray;
inline const glsl_type *const glsl_type::samplerShadow_type = &glsl_type_builtin_samplerShadow;
inline const glsl_type *const glsl_type::sampler1DShadow_type = &glsl_type_builtin_sampler1DShadow;
inline const glsl_type *const glsl_type::sampler2DShadow_type = &glsl_type_builtin_sampler2DShadow;
inline const glsl_type *const glsl_type::samplerCubeShadow_type = &glsl_type_builtin_samplerCubeShadow;
inline const glsl_type *const glsl_type::sampler1DArrayShadow_type = &glsl_type_builtin_sampler1DArrayShadow;
inline const glsl_type *const glsl_type::sampler2DArrayShadow_type = &glsl_type_builtin_sampler2DArrayShadow;
inline const glsl_type *const glsl_type::samplerCubeArrayShadow_type = &glsl_type_builtin_samplerCubeArrayShadow;
inline const glsl_type *const glsl_type::sampler2DRectShadow_type = &glsl_type_builtin_sampler2DRectShadow;
inline const glsl_type *const glsl_type::samplerExternalOES_type = &glsl_type_builtin_samplerExternalOES;
inline const glsl_type *const glsl_type::texture1D_type = &glsl_type_builtin_texture1D;
inline const glsl_type *const glsl_type::texture2D_type = &glsl_type_builtin_texture2D;
inline const glsl_type *const glsl_type::texture3D_type = &glsl_type_builtin_texture3D;
inline const glsl_type *const glsl_type::textureCube_type = &glsl_type_builtin_textureCube;
inline const glsl_type *const glsl_type::texture1DArray_type = &glsl_type_builtin_texture1DArray;
inline const glsl_type *const glsl_type::texture2DArray_type = &glsl_type_builtin_texture2DArray;
inline const glsl_type *const glsl_type::textureCubeArray_type = &glsl_type_builtin_textureCubeArray;
inline const glsl_type *const glsl_type::texture2DRect_type = &glsl_type_builtin_texture2DRect;
inline const glsl_type *const glsl_type::textureBuffer_type = &glsl_type_builtin_textureBuffer;
inline const glsl_type *const glsl_type::texture2DMS_type = &glsl_type_builtin_texture2DMS;
inline const glsl_type *const glsl_type::texture2DMSArray_type = &glsl_type_builtin_texture2DMSArray;
inline const glsl_type *const glsl_type::itexture1D_type = &glsl_type_builtin_itexture1D;
inline const glsl_type *const glsl_type::itexture2D_type = &glsl_type_builtin_itexture2D;
inline const glsl_type *const glsl_type::itexture3D_type = &glsl_type_builtin_itexture3D;
inline const glsl_type *const glsl_type::itextureCube_type = &glsl_type_builtin_itextureCube;
inline const glsl_type *const glsl_type::itexture1DArray_type = &glsl_type_builtin_itexture1DArray;
inline const glsl_type *const glsl_type::itexture2DArray_type = &glsl_type_builtin_itexture2DArray;
inline const glsl_type *const glsl_type::itextureCubeArray_type = &glsl_type_builtin_itextureCubeArray;
inline const glsl_type *const glsl_type::itexture2DRect_type = &glsl_type_builtin_itexture2DRect;
inline const glsl_type *const glsl_type::itextureBuffer_type = &glsl_type_builtin_itextureBuffer;
inline const glsl_type *const glsl_type::itexture2DMS_type = &glsl_type_builtin_itexture2DMS;
inline const glsl_type *const glsl_type::itexture2DMSArray_type = &glsl_type_builtin_itexture2DMSArray;
inline const glsl_type *const glsl_type::utexture1D_type = &glsl_type_builtin_utexture1D;
inline const glsl_type *const glsl_type::utexture2D_type = &glsl_type_builtin_utexture2D;
inline const glsl_type *const glsl_type::utexture3D_type = &glsl_type_builtin_utexture3D;
inline const glsl_type *const glsl_type::utextureCube_type = &glsl_type_builtin_utextureCube;
inline const glsl_type *const glsl_type::utexture1DArray_type = &glsl_type_builtin_utexture1DArray;
inline const glsl_type *const glsl_type::utexture2DArray_type = &glsl_type_builtin_utexture2DArray;
inline const glsl_type *const glsl_type::utextureCubeArray_type = &glsl_type_builtin_utextureCubeArray;
inline const glsl_type *const glsl_type::utexture2DRect_type = &glsl_type_builtin_utexture2DRect;
inline const glsl_type *const glsl_type::utextureBuffer_type = &glsl_type_builtin_utextureBuffer;
inline const glsl_type *const glsl_type::utexture2DMS_type = &glsl_type_builtin_utexture2DMS;
inline const glsl_type *const glsl_type::utexture2DMSArray_type = &glsl_type_builtin_utexture2DMSArray;
inline const glsl_type *const glsl_type::textureExternalOES_type = &glsl_type_builtin_textureExternalOES;
inline const glsl_type *const glsl_type::vtexture1D_type = &glsl_type_builtin_vtexture1D;
inline const glsl_type *const glsl_type::vtexture2D_type = &glsl_type_builtin_vtexture2D;
inline const glsl_type *const glsl_type::vtexture3D_type = &glsl_type_builtin_vtexture3D;
inline const glsl_type *const glsl_type::vtexture1DArray_type = &glsl_type_builtin_vtexture1DArray;
inline const glsl_type *const glsl_type::vtexture2DArray_type = &glsl_type_builtin_vtexture2DArray;
inline const glsl_type *const glsl_type::vtextureBuffer_type = &glsl_type_builtin_vtextureBuffer;
inline const glsl_type *const glsl_type::image1D_type = &glsl_type_builtin_image1D;
inline const glsl_type *const glsl_type::image2D_type = &glsl_type_builtin_image2D;
inline const glsl_type *const glsl_type::image3D_type = &glsl_type_builtin_image3D;
inline const glsl_type *const glsl_type::image2DRect_type = &glsl_type_builtin_image2DRect;
inline const glsl_type *const glsl_type::imageCube_type = &glsl_type_builtin_imageCube;
inline const glsl_type *const glsl_type::imageBuffer_type = &glsl_type_builtin_imageBuffer;
inline const glsl_type *const glsl_type::image1DArray_type = &glsl_type_builtin_image1DArray;
inline const glsl_type *const glsl_type::image2DArray_type = &glsl_type_builtin_image2DArray;
inline const glsl_type *const glsl_type::imageCubeArray_type = &glsl_type_builtin_imageCubeArray;
inline const glsl_type *const glsl_type::image2DMS_type = &glsl_type_builtin_image2DMS;
inline const glsl_type *const glsl_type::image2DMSArray_type = &glsl_type_builtin_image2DMSArray;
inline const glsl_type *const glsl_type::iimage1D_type = &glsl_type_builtin_iimage1D;
inline const glsl_type *const glsl_type::iimage2D_type = &glsl_type_builtin_iimage2D;
inline const glsl_type *const glsl_type::iimage3D_type = &glsl_type_builtin_iimage3D;
inline const glsl_type *const glsl_type::iimage2DRect_type = &glsl_type_builtin_iimage2DRect;
inline const glsl_type *const glsl_type::iimageCube_type = &glsl_type_builtin_iimageCube;
inline const glsl_type *const glsl_type::iimageBuffer_type = &glsl_type_builtin_iimageBuffer;
inline const glsl_type *const glsl_type::iimage1DArray_type = &glsl_type_builtin_iimage1DArray;
inline const glsl_type *const glsl_type::iimage2DArray_type = &glsl_type_builtin_iimage2DArray;
inline const glsl_type *const glsl_type::iimageCubeArray_type = &glsl_type_builtin_iimageCubeArray;
inline const glsl_type *const glsl_type::iimage2DMS_type = &glsl_type_builtin_iimage2DMS;
inline const glsl_type *const glsl_type::iimage2DMSArray_type = &glsl_type_builtin_iimage2DMSArray;
inline const glsl_type *const glsl_type::uimage1D_type = &glsl_type_builtin_uimage1D;
inline const glsl_type *const glsl_type::uimage2D_type = &glsl_type_builtin_uimage2D;
inline const glsl_type *const glsl_type::uimage3D_type = &glsl_type_builtin_uimage3D;
inline const glsl_type *const glsl_type::uimage2DRect_type = &glsl_type_builtin_uimage2DRect;
inline const glsl_type *const glsl_type::uimageCube_type = &glsl_type_builtin_uimageCube;
inline const glsl_type *const glsl_type::uimageBuffer_type = &glsl_type_builtin_uimageBuffer;
inline const glsl_type *const glsl_type::uimage1DArray_type = &glsl_type_builtin_uimage1DArray;
inline const glsl_type *const glsl_type::uimage2DArray_type = &glsl_type_builtin_uimage2DArray;
inline const glsl_type *const glsl_type::uimageCubeArray_type = &glsl_type_builtin_uimageCubeArray;
inline const glsl_type *const glsl_type::uimage2DMS_type = &glsl_type_builtin_uimage2DMS;
inline const glsl_type *const glsl_type::uimage2DMSArray_type = &glsl_type_builtin_uimage2DMSArray;
inline const glsl_type *const glsl_type::i64image1D_type = &glsl_type_builtin_i64image1D;
inline const glsl_type *const glsl_type::i64image2D_type = &glsl_type_builtin_i64image2D;
inline const glsl_type *const glsl_type::i64image3D_type = &glsl_type_builtin_i64image3D;
inline const glsl_type *const glsl_type::i64image2DRect_type = &glsl_type_builtin_i64image2DRect;
inline const glsl_type *const glsl_type::i64imageCube_type = &glsl_type_builtin_i64imageCube;
inline const glsl_type *const glsl_type::i64imageBuffer_type = &glsl_type_builtin_i64imageBuffer;
inline const glsl_type *const glsl_type::i64image1DArray_type = &glsl_type_builtin_i64image1DArray;
inline const glsl_type *const glsl_type::i64image2DArray_type = &glsl_type_builtin_i64image2DArray;
inline const glsl_type *const glsl_type::i64imageCubeArray_type = &glsl_type_builtin_i64imageCubeArray;
inline const glsl_type *const glsl_type::i64image2DMS_type = &glsl_type_builtin_i64image2DMS;
inline const glsl_type *const glsl_type::i64image2DMSArray_type = &glsl_type_builtin_i64image2DMSArray;
inline const glsl_type *const glsl_type::u64image1D_type = &glsl_type_builtin_u64image1D;
inline const glsl_type *const glsl_type::u64image2D_type = &glsl_type_builtin_u64image2D;
inline const glsl_type *const glsl_type::u64image3D_type = &glsl_type_builtin_u64image3D;
inline const glsl_type *const glsl_type::u64image2DRect_type = &glsl_type_builtin_u64image2DRect;
inline const glsl_type *const glsl_type::u64imageCube_type = &glsl_type_builtin_u64imageCube;
inline const glsl_type *const glsl_type::u64imageBuffer_type = &glsl_type_builtin_u64imageBuffer;
inline const glsl_type *const glsl_type::u64image1DArray_type = &glsl_type_builtin_u64image1DArray;
inline const glsl_type *const glsl_type::u64image2DArray_type = &glsl_type_builtin_u64image2DArray;
inline const glsl_type *const glsl_type::u64imageCubeArray_type = &glsl_type_builtin_u64imageCubeArray;
inline const glsl_type *const glsl_type::u64image2DMS_type = &glsl_type_builtin_u64image2DMS;
inline const glsl_type *const glsl_type::u64image2DMSArray_type = &glsl_type_builtin_u64image2DMSArray;
inline const glsl_type *const glsl_type::vbuffer_type = &glsl_type_builtin_vbuffer;
inline const glsl_type *const glsl_type::vimage1D_type = &glsl_type_builtin_vimage1D;
inline const glsl_type *const glsl_type::vimage2D_type = &glsl_type_builtin_vimage2D;
inline const glsl_type *const glsl_type::vimage3D_type = &glsl_type_builtin_vimage3D;
inline const glsl_type *const glsl_type::vimage1DArray_type = &glsl_type_builtin_vimage1DArray;
inline const glsl_type *const glsl_type::vimage2DArray_type = &glsl_type_builtin_vimage2DArray;
inline const glsl_type *const glsl_type::subpassInput_type = &glsl_type_builtin_subpassInput;
inline const glsl_type *const glsl_type::subpassInputMS_type = &glsl_type_builtin_subpassInputMS;
inline const glsl_type *const glsl_type::isubpassInput_type = &glsl_type_builtin_isubpassInput;
inline const glsl_type *const glsl_type::isubpassInputMS_type = &glsl_type_builtin_isubpassInputMS;
inline const glsl_type *const glsl_type::usubpassInput_type = &glsl_type_builtin_usubpassInput;
inline const glsl_type *const glsl_type::usubpassInputMS_type = &glsl_type_builtin_usubpassInputMS;
inline const glsl_type *const glsl_type::textureSubpassInput_type = &glsl_type_builtin_textureSubpassInput;
inline const glsl_type *const glsl_type::textureSubpassInputMS_type = &glsl_type_builtin_textureSubpassInputMS;
inline const glsl_type *const glsl_type::itextureSubpassInput_type = &glsl_type_builtin_itextureSubpassInput;
inline const glsl_type *const glsl_type::itextureSubpassInputMS_type = &glsl_type_builtin_itextureSubpassInputMS;
inline const glsl_type *const glsl_type::utextureSubpassInput_type = &glsl_type_builtin_utextureSubpassInput;
inline const glsl_type *const glsl_type::utextureSubpassInputMS_type = &glsl_type_builtin_utextureSubpassInputMS;
#endif
